apiVersion: v1
kind: Service
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  ports:
  - port: 80
    name: web
  clusterIP: None
  selector:
    app: nginx
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: web
spec:
  selector:
    matchLabels:
      app: nginx # has to match .spec.template.metadata.labels
  serviceName: "nginx"
  replicas: 3 # by default is 1
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: nginx # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: nginx
        image: registry.k8s.io/nginx-slim:0.24
        ports:
        - containerPort: 80
          name: web
  #       volumeMounts:
  #       - name: www
  #         mountPath: /usr/share/nginx/html
  # volumeClaimTemplates:
  # - metadata:
  #     name: www
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     storageClassName: "my-storage-class"
  #     resources:
  #       requests:
  #         storage: 1Gi
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: nginx-ingress
#   annotations:
#     # kubernetes.io/ingress.class: nginx
#     nginx.ingress.kubernetes.io/rewrite-target: /$1
    
#     # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
#     nginx.ingress.kubernetes.io/proxy-body-size: 50m
#     nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
#     nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
# spec:
#   ingressClassName: nginx
#   # tls: 
#   # - hosts:
#   #   - platform.mazor.medtronic.com
#   #   secretName: k3s-tls
#   rules:
#   - host: platform.mazor.medtronic.com
#     http:
#       paths:
#       - backend:
#           service:
#             name: nginx
#             port:
#               number: 80
#         path: "/home/(.*)"
#         pathType: Prefix
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
  name: rewrite
  namespace: default
spec:
  ingressClassName: nginx
  rules:
  - host: platform.mazor.medtronic.com
    http:
      paths:
      - path: /home(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: nginx
            port: 
              number: 80
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#   name: rewrite
#   namespace: default
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: platform.mazor.medtronic.com
#     http:
#       paths:
#       - path: /
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: nginx
#             port: 
#               number: 80
